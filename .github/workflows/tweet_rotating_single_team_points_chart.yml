name: Tweet Rotating Forward Scoring Rates
on:
  schedule:
    - cron: 30 15-23/2 * * *

jobs:
  determine-team:
    runs-on: ubuntu-latest

    outputs:
      team: ${{ steps.choose_team.outputs.team }}

    steps:
      - name: Choose team from variable
        id: choose_team
        shell: python
        env:
          TEAM_VALUE: ${{ vars.TEAM_VALUE_POINTS }}
        run: |
          import os

          team_value = int(os.environ['TEAM_VALUE'])

          if team_value > 31:
            team_value = 0

          teams = ['ANA', 'BOS', 'BUF', 'CAR', 'CBJ', 'CGY', 'CHI', 'COL', 'DAL', 'DET', 
                   'EDM', 'FLA', 'LAK', 'MIN', 'MTL', 'NJD', 'NSH', 'NYI', 'NYR', 'OTT',
                   'PHI', 'PIT', 'SEA', 'SJS', 'STL', 'TBL', 'TOR', 'UTA', 'VAN', 'VGK',
                   'WPG', 'WSH']

          team = teams[team_value]

          team_value += 1

          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              print(f'team={team}\n', file=fh)
              print(f'team_value={team_value}', file=fh)

      - uses: actions/checkout@v3
      - name: Update team value
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_UPDATE_VARIABLES }}
        run: gh variable set TEAM_VALUE_POINTS --body ${{ steps.choose_team.outputs.team_value }}

  gather-plot:
    needs: determine-team
    uses: hockey-stats/chart-plotting/.github/workflows/scrape_and_plot_skater_points.yml@main
    with:
      team: ${{ needs.determine-team.outputs.team }}
      minimum_icetime: 250

  tweet-plot:
    runs-on: ubuntu-latest
    needs: [gather-plot, determine-team]
    env:
      API_KEY: ${{ secrets.API_KEY }}
      API_SECRET: ${{ secrets.API_KEY_SECRET }}
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      BSKY_LOGIN: ${{ secrets.BSKY_LOGIN }}
      BSKY_PASSWORD: ${{ secrets.BSKY_PASSWORD }}
      TEAM: ${{ needs.determine-team.outputs.team }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download Charts
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.gather-plot.outputs.plot_artifact_name }}
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
       
      - name: Install Requirements
        run: pip install -r requirements.txt
      
      - name: Get Team Details
        id: team_details
        run: python3 get_team_details.py $TEAM
      
      - name: Send Tweet
        run: |
          python3 tweet_picture.py -i ${TEAM}_F_5on5_scoring_rates.png -t "${{ steps.team_details.outputs.team_full_name }} 5v5 forward scoring rates ${{ steps.team_details.outputs.hashtag }} #NHL";

      - name: Send Skeet
        run: |
          python3 skeet_picture.py -i ${TEAM}_F_5on5_scoring_rates.png -t "${{ steps.team_details.outputs.team_full_name }} 5v5 forward scoring rates ${{ steps.team_details.outputs.hashtag }} #NHL";
